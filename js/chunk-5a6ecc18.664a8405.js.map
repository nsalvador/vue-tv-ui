{"version":3,"sources":["webpack:///../../../src/components/VSheet/index.ts","webpack:///../../../src/mixins/measurable/index.ts","webpack:///../../../src/mixins/binds-attrs/index.ts","webpack:///../../../src/mixins/elevatable/index.ts","webpack:///../../../src/components/VSheet/VSheet.ts","webpack:///../../../src/mixins/colorable/index.ts","webpack:///../../../src/mixins/sizeable/index.ts","webpack:///./node_modules/core-js/modules/es.string.small.js","webpack:///../../../src/mixins/toggleable/index.ts"],"names":["name","props","height","Number","maxHeight","maxWidth","minHeight","minWidth","width","String","computed","measurableStyles","styles","this","makeWatcher","Object","$data","val","data","attrs$","listeners$","created","immediate","elevation","computedElevation","elevationClasses","isNaN","parseInt","mixins","tag","type","default","tile","Boolean","classes","render","class","style","on","h","setBackgroundColor","$slots","isCssColor","color","methods","setTextColor","colorName","large","small","xLarge","xSmall","medium","sizeableClasses","$","createHTML","forcedStringHTMLMethod","target","proto","forced","prop","event","model","required","isActive","watch","$emit","Toggleable","factory"],"mappings":"kHAAA,gBAGA,e,0ECKe,qBAAW,CACxBA,KADwB,aAGxBC,MAAO,CACLC,OAAQ,CAACC,OADJ,QAELC,UAAW,CAACD,OAFP,QAGLE,SAAU,CAACF,OAHN,QAILG,UAAW,CAACH,OAJP,QAKLI,SAAU,CAACJ,OALN,QAMLK,MAAO,CAACL,OAAQM,SAGlBC,SAAU,CACRC,iBADQ,WAEN,IAAMC,EAAN,GAEMV,EAAS,eAAcW,KAA7B,QACMP,EAAY,eAAcO,KAAhC,WACMN,EAAW,eAAcM,KAA/B,UACMT,EAAY,eAAcS,KAAhC,WACMR,EAAW,eAAcQ,KAA/B,UACML,EAAQ,eAAcK,KAA5B,OASA,OAPA,IAAYD,EAAA,UACZ,IAAeA,EAAA,aACf,IAAcA,EAAA,YACd,IAAeA,EAAA,aACf,IAAcA,EAAA,YACd,IAAWA,EAAA,SAEX,O,6DCtCN,gBAOA,SAASE,EAAT,GACE,OAAO,SAAU,EAAV,GACL,IAAK,IAAL,OACOC,OAAA,gCAAL,IACEF,KAAA,QAAaA,KAAKG,MAAlB,MAGJ,IAAK,IAAL,OACEH,KAAA,KAAUA,KAAKG,MAAf,KAAsCC,EAAtC,KAKS,qBAAW,CACxBC,KAAM,iBAAO,CACXC,OADW,GAEXC,WAAY,KAGdC,QANwB,WAStBR,KAAA,gBAAsBC,EAAtB,UAA6C,CAAEQ,WAAW,IAC1DT,KAAA,oBAA0BC,EAA1B,cAAqD,CAAEQ,WAAW,Q,4HC5BvD,gBAAW,CACxBtB,KADwB,aAGxBC,MAAO,CACLsB,UAAW,CAACpB,OAAQM,SAGtBC,SAAU,CACRc,kBADQ,WAEN,OAAOX,KAAP,WAEFY,iBAJQ,WAKN,IAAMF,EAAYV,KAAlB,kBAEA,aAAIU,GACAG,MAAMC,SAAV,IAD8B,GAE9B,sCAAuBd,KAAd,YAAiC,O,oCCDjC,cAAAe,EAAA,MAAO,EAAD,qBAAN,eAMN,CACP5B,KADO,UAGPC,MAAO,CACL4B,IAAK,CACHC,KADG,OAEHC,QAAS,OAEXC,KAAMC,SAGRvB,SAAU,CACRwB,QADQ,WAEN,uBACE,WADK,EAEL,gBAAiBrB,KAFZ,MAGFA,KAHE,aAAP,GAIKA,KAAKY,mBAGZb,OATQ,WAUN,OAAOC,KAAP,mBAIJsB,OAzBO,SAyBD,GACJ,IAAMjB,EAAO,CACXkB,MAAOvB,KADI,QAEXwB,MAAOxB,KAFI,OAGXyB,GAAIzB,KAAKO,YAGX,OAAOmB,EACL1B,KADM,IAENA,KAAK2B,mBAAmB3B,KAAxB,MAFM,GAGNA,KAAK4B,OAHP,a,8JCnDJ,SAASC,EAAT,GACE,QAAO,KAAaC,EAAA,MAApB,8BAGa,qBAAW,CACxB3C,KADwB,YAGxBC,MAAO,CACL0C,MAAOlC,QAGTmC,QAAS,CACPJ,mBADO,SACW,GAA8C,IAApBtB,EAAoB,uDAA9C,GAChB,wBAAWA,EAAP,OAEF,eAAa,0BAFqB,MAIlC,GAEF,kBAAWA,EAAP,OAEF,eAAa,0BAFqB,MAIlC,IAEEwB,EAAJ,GACExB,EAAA,wBACKA,EADQ,MAAb,CAEE,6BAFW,GAGX,yBAAmByB,KAEZA,IACTzB,EAAA,wBACKA,EADQ,MAAb,kBAEE,GAAS,KAIb,IAGF2B,aA9BO,SA8BK,GAA8C,IAApB3B,EAAoB,uDAA9C,GACV,qBAAWA,EAAP,MAIF,OAFA,eAAa,0BAFqB,MAIlC,EAEF,qBAAWA,EAAP,MAIF,OAFA,eAAa,0BAFqB,MAIlC,EAEF,GAAIwB,EAAJ,GACExB,EAAA,wBACKA,EADQ,MAAb,CAEEyB,MAAO,GAAF,OAFM,GAGX,wBAAkBA,UAEf,GAAIA,EAAO,OACmBA,EAAA,4BAAnC,GADgB,sBACV,EADU,KACV,EADU,KAEhBzB,EAAA,wBACKA,EADQ,MAAb,kBAEG4B,EAAD,UAAwB,IAE1B,IACE5B,EAAA,MAAW,SAAX,OAGJ,c,4DCxES,qBAAW,CACxBlB,KADwB,WAGxBC,MAAO,CACL8C,MADK,QAELC,MAFK,QAGLC,OAHK,QAILC,OAAQjB,SAGVvB,SAAU,CACRyC,OADQ,WAEN,OAAOlB,SACJpB,KAAD,SACCA,KADD,QAECA,KAFD,QAGCA,KAJH,SAOFuC,gBATQ,WAUN,MAAO,CACL,kBAAmBvC,KADd,OAEL,gBAAiBA,KAFZ,MAGL,kBAAmBA,KAHd,OAIL,gBAAiBA,KAJZ,MAKL,kBAAmBA,KAAKoC,a,kCC1BhC,IAAII,EAAI,EAAQ,QACZC,EAAa,EAAQ,QACrBC,EAAyB,EAAQ,QAIrCF,EAAE,CAAEG,OAAQ,SAAUC,OAAO,EAAMC,OAAQH,EAAuB,UAAY,CAC5EP,MAAO,WACL,OAAOM,EAAWzC,KAAM,QAAS,GAAI,Q,gGCHnC,aAAkD,MAA/B8C,EAA+B,uDAAlD,QAAmCC,EAAe,uDAAlD,QACJ,OAAO,cAAW,CAChB5D,KADgB,aAGhB6D,MAAO,CAAEF,OAAMC,SAEf3D,MAAO,kBACL,EAAQ,CAAE6D,UAAU,IAGtB5C,KATgB,WAUd,MAAO,CACL6C,WAAYlD,KAAK8C,KAIrBK,OAAK,sBACH,GADG,SACH,GACEnD,KAAA,gBAFC,sCAIK,KACN,IAAUA,KAAV,IAAwBA,KAAKoD,MAAML,EAAnC,MALC,KAYT,IAAMM,EAAaC,IAEnB","file":"js/chunk-5a6ecc18.664a8405.js","sourcesContent":["import VSheet from './VSheet'\n\nexport { VSheet }\nexport default VSheet\n","// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport Vue, { PropType } from 'vue'\n\nexport type NumberOrNumberString = PropType<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString,\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    },\n  },\n})\n","import Vue, { WatchHandler } from 'vue'\n\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher (property: string): ThisType<Vue> & WatchHandler<any> {\n  return function (this: Vue, val, oldVal) {\n    for (const attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr)\n      }\n    }\n    for (const attr in val) {\n      this.$set(this.$data[property], attr, val[attr])\n    }\n  }\n}\n\nexport default Vue.extend({\n  data: () => ({\n    attrs$: {} as Dictionary<string>,\n    listeners$: {} as Dictionary<Function | Function[]>,\n  }),\n\n  created () {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), { immediate: true })\n    this.$watch('$listeners', makeWatcher('listeners$'), { immediate: true })\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'elevatable',\n\n  props: {\n    elevation: [Number, String],\n  },\n\n  computed: {\n    computedElevation (): string | number | undefined {\n      return this.elevation\n    },\n    elevationClasses (): Record<string, boolean> {\n      const elevation = this.computedElevation\n\n      if (elevation == null) return {}\n      if (isNaN(parseInt(elevation))) return {}\n      return { [`elevation-${this.elevation}`]: true }\n    },\n  },\n})\n","// Styles\nimport './VSheet.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  Colorable,\n  Elevatable,\n  Measurable,\n  Themeable\n).extend({\n  name: 'v-sheet',\n\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-sheet': true,\n        'v-sheet--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    styles (): object {\n      return this.measurableStyles\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      class: this.classes,\n      style: this.styles,\n      on: this.listeners$,\n    }\n\n    return h(\n      this.tag,\n      this.setBackgroundColor(this.color, data),\n      this.$slots.default\n    )\n  },\n})\n","import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\n\nfunction isCssColor (color?: string | false): boolean {\n  return !!color && !!color.match(/^(#|var\\(--|(rgb|hsl)a?\\()/)\n}\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'sizeable',\n\n  props: {\n    large: Boolean,\n    small: Boolean,\n    xLarge: Boolean,\n    xSmall: Boolean,\n  },\n\n  computed: {\n    medium (): boolean {\n      return Boolean(\n        !this.xSmall &&\n        !this.small &&\n        !this.large &&\n        !this.xLarge\n      )\n    },\n    sizeableClasses (): object {\n      return {\n        'v-size--x-small': this.xSmall,\n        'v-size--small': this.small,\n        'v-size--default': this.medium,\n        'v-size--large': this.large,\n        'v-size--x-large': this.xLarge,\n      }\n    },\n  },\n})\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.small` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.small\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('small') }, {\n  small: function small() {\n    return createHTML(this, 'small', '', '');\n  }\n});\n","import Vue, { VueConstructor } from 'vue'\n\n/* eslint-disable-next-line no-use-before-define */\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"],"sourceRoot":""}